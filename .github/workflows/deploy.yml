- name: Deploy to EC2
run: |
  # Test SSH connection first
  echo "Testing SSH connection..."
  ssh -i ~/.ssh/private.key -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} 'echo "SSH connection successful"'
  
  # Create app directory and install Docker on EC2
  echo "Setting up EC2 instance..."
  ssh -i ~/.ssh/private.key -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} '
    # Create app directory if it doesn't exist
    mkdir -p ~/app
    
    # Install Docker if not installed
    if ! command -v docker &> /dev/null; then
      sudo apt-get update
      sudo apt-get install -y docker.io
      sudo systemctl start docker
      sudo systemctl enable docker
      sudo usermod -aG docker $USER || true
    fi
    
    # Install Docker Compose if not installed
    if ! command -v docker-compose &> /dev/null; then
      sudo apt-get install -y docker-compose || true
    fi
  '

  # Copy files to EC2
  echo "Copying files to EC2..."
  scp -i ~/.ssh/private.key -o StrictHostKeyChecking=no -r ./* ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }}:~/app/
  
  # SSH into EC2 and run deployment commands
  echo "Running deployment commands..."
  ssh -i ~/.ssh/private.key -o StrictHostKeyChecking=no ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} '
    cd ~/app
    # Backup existing .env file if it exists
    if [ -f .env ]; then
      mv .env .env.backup || true
    fi

    # Copy production env file
    cp .env.production .env

    # Ensure proper permissions for .env file
    chmod 600 .env

    # Deploy with Docker Compose
    docker-compose down || true
    docker-compose build --no-cache || true
    docker-compose up -d || true

    echo "Deployment complete!"
  '
